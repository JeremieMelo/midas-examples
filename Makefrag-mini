# SimWrapper
Tile-sim-simple-cpp:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(C_FLAGS) $(simple_args)" | tee $(log_dir)/$@.log

Tile-sim-simple-v:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(V_FLAGS) $(simple_args)" | tee $(log_dir)/$@.log

Tile-sim-isa-cpp:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(C_FLAGS) $(isa_args)" | tee $(log_dir)/$@.log

Tile-sim-isa-v:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(V_FLAGS) $(isa_args)" | tee $(log_dir)/$@.log

Tile-sim-bmarks-cpp:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(C_FLAGS) $(bmarks_args)" | tee $(log_dir)/$@.log

Tile-sim-bmarks-v:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(V_FLAGS) $(bmarks_args)" | tee $(log_dir)/$@.log

# AXI4Wrapper
Tile-axi-simple-cpp:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLGAS) "run TileAXI4Wrapper $(C_FLAGS) $(simple_args)" | tee $(log_dir)/$@.log

Tile-axi-simple-v:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(V_FLAGS) $(simple_args)" | tee $(log_dir)/$@.log

Tile-axi-isa-cpp:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(C_FLAGS) $(isa_args)" | tee $(log_dir)/$@.log

Tile-axi-isa-v:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(V_FLAGS) $(isa_args)" | tee $(log_dir)/$@.log

Tile-axi-bmarks-cpp:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(C_FLAGS) $(bmarks_args)" | tee $(log_dir)/$@.log

Tile-axi-bmarks-v:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(V_FLAGS) $(bmarks_args)" | tee $(log_dir)/$@.log

# ISA tests
$(addsuffix -sim-cpp, $(isa_tests)): %-sim-cpp: $(isa_dir)/%.hex
	 mkdir -p $(log_dir)
	 cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(C_FLAGS) +loadmem=$< +verbose +max-cycles=3000" \
	 | tee $(log_dir)/$@.log

$(addsuffix -sim-v, $(isa_tests)): %-sim-v: $(isa_dir)/%.hex
	 mkdir -p $(log_dir)
	 cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(V_FLAGS) +loadmem=$< +verbose +max-cycles=3000" \
	 | tee $(log_dir)/$@.log

$(addsuffix -axi-cpp, $(isa_tests)): %-axi-cpp: $(isa_dir)/%.hex
	 mkdir -p $(log_dir)
	 cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(C_FLAGS) +loadmem=$< +verbose +max-cycles=3000" \
	 | tee $(log_dir)/$@.log

$(addsuffix -axi-v, $(isa_tests)): %-axi-v: $(isa_dir)/%.hex
	 mkdir -p $(log_dir)
	 cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(V_FLAGS) +loadmem=$< +verbose +max-cycles=3000" \
	 | tee $(log_dir)/$@.log

# Benchmarks
$(addsuffix -sim-cpp, $(bmarks)): %-sim-cpp: $(bmarks_dir)/%.hex
	 mkdir -p $(log_dir)
	 cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(C_FLAGS) +loadmem=$< +max-cycles=500000" \
	 | tee $(log_dir)/$@.log

$(addsuffix -sim-v, $(bmarks)): %-sim-v: $(bmarks_dir)/%.hex
	 mkdir -p $(log_dir)
	 cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileWrapper $(V_FLAGS) +loadmem=$< +max-cycles=500000" \
	 | tee $(log_dir)/$@.log

$(addsuffix -axi-cpp, $(bmarks)): %-axi-cpp: $(bmarks_dir)/%.hex
	 mkdir -p $(log_dir)
	 cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(C_FLAGS) +loadmem=$< +max-cycles=500000" \
	 | tee $(log_dir)/$@.log

$(addsuffix -axi-v, $(bmarks)): %-axi-v: $(bmarks_dir)/%.hex
	 mkdir -p $(log_dir)
	 cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run TileAXI4Wrapper $(V_FLAGS) +loadmem=$< +max-cycles=500000" \
	 | tee $(log_dir)/$@.log
