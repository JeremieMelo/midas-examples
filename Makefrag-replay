CONFIG = VLSI
vcs_sim_rtl_dir    := vcs-sim-rtl
vcs_sim_gl_syn_dir := vcs-sim-gl-syn
vcs_sim_gl_par_dir := vcs-sim-gl-par
vcs_sim_rtl        := $(addprefix $(vcs_sim_rtl_dir)/,    $(addsuffix .$(CONFIG), $(tut) $(mini)))
vcs_sim_gl_syn     := $(addprefix $(vcs_sim_gl_syn_dir)/, $(addsuffix .$(CONFIG), $(tut) $(mini)))
vcs_sim_gl_par     := $(addprefix $(vcs_sim_gl_par_dir)/, $(addsuffix .$(CONFIG), $(tut) $(mini)))

samples       := $(addprefix $(resdir)/, $(addsuffix .sample, $(tut) $(mini)))
replay_cpp    := $(addsuffix .cpp,         $(tut) $(mini))
replay_v      := $(addsuffix .v,           $(tut) $(mini))
replay_rtl    := $(addsuffix -rtl,         $(tut) $(mini))
replay_gl_syn := $(addsuffix -gl-syn,      $(tut) $(mini))
replay_gl_par := $(addsuffix -gl-par,      $(tut) $(mini))
replay_pwr    := $(addsuffix -pwr,         $(tut) $(mini))
test_gl_par   := $(addsuffix -test-gl-par, $(tut))
test_pwr      := $(addsuffix -test-pwr,    $(tut))

$(gendir)/%.sample: $(resdir)/%.sample
	mkdir -p $(gendir)
	cp $< $@

$(replay_cpp): %.cpp: $(gendir)/%.sample %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(gendir)
	sbt "run $(basename $@)Replay $(C_FLAGS)" | tee $(logdir)/$@.out

$(replay_v): %.v: $(gendir)/%.sample %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(gendir)
	sbt "run $(basename $@)Replay $(V_FLAGS)" | tee $(logdir)/$@.out

$(vcs_sim_rtl): $(vcs_sim_rtl_dir)/%.$(CONFIG):
	mkdir -p $(logdir) $(gendir)
	cd $(vcs_sim_rtl_dir) && $(MAKE) MODEL=$*

$(replay_rtl): %-rtl: $(vcs_sim_rtl_dir)/%.$(CONFIG) $(gendir)/%.sample %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(gendir)
	cp -r $< $<.csrc $<.daidir $(gendir)
	sbt "run $*Replay $(VCS_FLAGS) --testCommand $(notdir $<) -q +vcs+initreg+0" | tee $(logdir)/$@

$(vcs_sim_gl_syn): $(vcs_sim_gl_syn_dir)/%.$(CONFIG):
	cd $(vcs_sim_gl_syn_dir) && $(MAKE) MODEL=$*

$(vcs_sim_gl_syn_dir)/%.match:
	cd $(vcs_sim_gl_syn_dir) && $(MAKE) $(notdir $@) MODEL=$*

$(replay_gl_syn): %-gl-syn: $(vcs_sim_gl_syn_dir)/%.$(CONFIG) $(vcs_sim_gl_syn_dir)/%.match $(gendir)/%.sample %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(gendir)
	cp -r $< $<.csrc $<.daidir $(gendir)
	sbt "run $*Replay +match=$(word 2, $^) $(VCS_FLAGS) --testCommand $(notdir $<) -q +vcs+initreg+0" | \
	tee $(logdir)/$@.log

$(vcs_sim_gl_par): $(vcs_sim_gl_par_dir)/%.$(CONFIG):
	cd $(vcs_sim_gl_par_dir) && $(MAKE) MODEL=$*

$(vcs_sim_gl_par_dir)/%.match:
	cd $(vcs_sim_gl_par_dir) && $(MAKE) $(notdir $@) MODEL=$*

$(replay_gl_par): %-gl-par: $(vcs_sim_gl_par_dir)/%.$(CONFIG) $(vcs_sim_gl_par_dir)/%.match $(gendir)/%.sample %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(gendir)
	cp -r $< $<.csrc $<.daidir $(gendir)
	sbt "run $*Replay +match=$(word 2, $^) $(VCS_FLAGS) --testCommand $(notdir $<) -q +vcs+initreg+0" | \
	tee $(logdir)/$@.log

$(replay_pwr): %-pwr: %-gl-par
	cd pt-pwr && rm -f current-pt && $(MAKE) MODEL=$*

$(test_gl_par): %-test-gl-par: $(vcs_sim_gl_par_dir)/%.$(CONFIG) %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(gendir)
	cp -r $< $<.csrc $<.daidir $(gendir)
	sbt "run $* $(VCS_FLAGS) --testCommand $(notdir $<) -q +vcs+initreg+0" | \
	tee $(logdir)/$@.log

$(test_pwr): %-test-pwr: %-test-gl-par
	cd pt-pwr && rm -f current-pt && $(MAKE) MODEL=$*
