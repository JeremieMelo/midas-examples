sim_cpp := $(addsuffix -sim-cpp, $(tut))
sim_v   := $(addsuffix -sim-v,   $(tut))
axi_cpp := $(addsuffix -axi-cpp, $(tut))
axi_v   := $(addsuffix -axi-v,   $(tut))

sim_cpp: $(sim_cpp)
sim_v:   $(sim_v)
axi_cpp: $(axi_cpp)
axi_v:   $(axi_v)

# SimWrapper tests
$(sim_cpp): %-sim-cpp: 
	mkdir -p $(log_dir) $(res_dir)
	$(SBT) $(SBT_FLGAS) "run $*Wrapper $(C_FLAGS)" | tee $(log_dir)/$@.log

$(sim_v): %-sim-v: 
	mkdir -p $(log_dir) $(res_dir)
	$(SBT) $(SBT_FLGAS) "run $*Wrapper $(V_FLAGS)" | tee $(log_dir)/$@.log

# SimAXI4Wrapper tests
$(axi_cpp): %-axi-cpp: 
	mkdir -p $(log_dir) $(res_dir)
	$(SBT) $(SBT_FLGAS) "run $*AXI4Wrapper $(C_FLAGS)" | tee $(log_dir)/$@.log

$(axi_v): %-axi-v: 
	mkdir -p $(log_dir) $(res_dir)
	$(SBT) $(SBT_FLGAS) "run $*AXI4Wrapper $(V_FLAGS)" | tee $(log_dir)/$@.log

.PHONY: sim_cpp sim_v axi_cpp axi_v 
