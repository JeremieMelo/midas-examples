sim_cpp := $(addsuffix Wrapper.cpp,     $(tut))
sim_v   := $(addsuffix Wrapper.v,       $(tut))
axi_cpp := $(addsuffix AXI4Wrapper.cpp, $(tut))
axi_v   := $(addsuffix AXI4Wrapper.v,   $(tut))

sim_cpp: $(sim_cpp)
sim_v:   $(sim_v)
axi_cpp: $(axi_cpp)
axi_v:   $(axi_v)

# SimWrapper tests
$(sim_cpp): %Wrapper.cpp: %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(resdir)
	sbt "run $(basename $@) $(C_FLAGS)" | tee $(logdir)/$@.out

$(sim_v): %Wrapper.v: %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(resdir)
	sbt "run $*Wrapper $(V_FLAGS)" | tee $(logdir)/$*Wrapper.v.out

# SimWrapper tests
$(axi_cpp): %AXI4Wrapper.cpp: %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(resdir)
	sbt "run $(basename $@) $(C_FLAGS)" | tee $(logdir)/$@.out

$(axi_v): %AXI4Wrapper.v: %.scala $(strober) $(srcs)
	mkdir -p $(logdir) $(resdir)
	sbt "run $*AXI4Wrapper $(V_FLAGS)" | tee $(logdir)/$*Wrapper.v.out

.PHONY: sim_cpp sim_v axi_cpp axi_v 
