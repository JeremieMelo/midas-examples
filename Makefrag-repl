#########################
# STEP4: Sample Replays #
#########################
SAMPLE ?=
prefix = $(if $(SAMPLE), $(notdir $(basename $(SAMPLE))))

replay_cpp    := $(addsuffix -replay-cpp,    $(tut) $(mini))
replay_v      := $(addsuffix -replay-v,      $(tut) $(mini))
replay_rtl    := $(addsuffix -replay-rtl,    $(tut) $(mini))
replay_gl_syn := $(addsuffix -replay-gl-syn, $(tut) $(mini))
replay_gl_par := $(addsuffix -replay-gl-par, $(tut) $(mini))
replay_pwr    := $(addsuffix -replay-pwr,    $(tut) $(mini))

# Samples
#ifndef SAMPLE
$(gen_dir)/%.sample: $(res_dir)/%.sample
	mkdir -p $(gen_dir)
	cp $< $@
#endif

# VCS Simulators
$(vcs_sim_rtl): $(vcs_sim_rtl_dir)/%.$(CONFIG):
	cd $(vcs_sim_rtl_dir) && $(MAKE) MODEL=$*

$(vcs_sim_gl_syn): $(vcs_sim_gl_syn_dir)/%.$(CONFIG):
	cd $(vcs_sim_gl_syn_dir) && $(MAKE) MODEL=$*

$(vcs_sim_gl_par): $(vcs_sim_gl_par_dir)/%.$(CONFIG):
	cd $(vcs_sim_gl_par_dir) && $(MAKE) MODEL=$*

# Name Mapping
$(vcs_sim_gl_syn_dir)/%.match:
	cd $(vcs_sim_gl_syn_dir) && $(MAKE) $(notdir $@) MODEL=$*

$(vcs_sim_gl_par_dir)/%.match:
	cd $(vcs_sim_gl_par_dir) && $(MAKE) $(notdir $@) MODEL=$*

# Replay on Chisel Emulator
$(replay_cpp): %-replay-cpp: $(if $(SAMPLE), $(SAMPLE), $(gen_dir)/%.sample)
	mkdir -p $(log_dir)
	$(SBT) $(SBT_FLAGS) "run $*Replay $(C_FLAGS) $(if $(SAMPLE),+sample=$<)" | tee $(log_dir)/$@.log

# Replay on Verilog Simulation
$(replay_v): %-replay-v: $(if $(SAMPLE), $(SAMPLE), $(gen_dir)/%.sample)
	mkdir -p $(log_dir)
	$(SBT) $(SBT_FLAGS) "run $*Replay $(V_FLAGS) $(if $(SAMPLE),+sample=$<)" | tee $(log_dir)/$@.log

# Replay on VCS RTL Simulation 
$(replay_rtl): %-replay-rtl: $(vcs_sim_rtl_dir)/%.$(CONFIG) $(if $(SAMPLE), $(SAMPLE), $(gen_dir)/%.sample)
	mkdir -p $(log_dir) 
	$(SBT) $(SBT_FLAGS) "run $*Replay $(VCS_FLAGS) $(if $(SAMPLE),+sample=$(word 2, $^)) --testCommand $< -q +vcs+initreg+0 +vpdfile=$(vcs_sim_rtl_dir)/$*.vpd +vpdmem" | tee $(log_dir)/$@.log

# Replay on Post-Synthesis Simulation
$(replay_gl_syn): %-replay-gl-syn: $(vcs_sim_gl_syn_dir)/%.$(CONFIG) $(vcs_sim_gl_syn_dir)/%.match $(if $(SAMPLE), $(SAMPLE), $(gen_dir)/%.sample)
	mkdir -p $(log_dir)
	$(SBT) $(SBT_FLAGS) "run $*Replay $(VCS_FLAGS) +match=$(word 2, $^) $(if $(SAMPLE),+sample=$(word 3, $^)) --testCommand $< -q +vcs+initreg+0 +vpdfile=$(vcs_sim_gl_syn_dir)/$*.vpd +vpdmem" | tee $(log_dir)/$@.log

# Replay on Post-Place-and-Route Simulation
$(vcs_sim_gl_par_dir)/%.saif: $(vcs_sim_gl_par_dir)/%.$(CONFIG) $(vcs_sim_gl_par_dir)/%.match $(if $(SAMPLE), $(SAMPLE), $(gen_dir)/%.sample) 
	mkdir -p $(log_dir) 
	rm -f $(vcs_sim_gl_par_dir)/$*.saif $(vcs_sim_gl_par_dir)/$*-pipe.vcd
	vcd2saif -input $(vcs_sim_gl_par_dir)/$*-pipe.vcd -output $(vcs_sim_gl_par_dir)/$*.saif \
	-pipe "$(SBT) $(SBT_FLAGS) \"run $*Replay $(VCS_FLAGS) +match=$(word 2, $^) $(if $(SAMPLE),+sample=$(word 3, $^)) --testCommand $< -q +vcs+initreg+0 +vcdfile=$(vcs_sim_gl_par_dir)/$*-pipe.vcd +vpdfile=$(vcs_sim_gl_par_dir)/$*.vpd +vpdmem\"" \
	| tee $(log_dir)/$*-replay-gl-par.log

$(replay_gl_par): %-replay-gl-par: $(if $(prefix), $(prefix).saif, $(vcs_sim_gl_par_dir)/%.saif)

# Average Power from Replays
$(replay_pwr): %-replay-pwr: $(vcs_sim_gl_par_dir)/%.saif
	cd pt-pwr && rm -f current-pt && $(MAKE) MODEL=$* $(if $(prefix), pt_prefix=$(prefix))
