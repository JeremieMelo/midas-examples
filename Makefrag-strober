# Desings
tutorial := GCD Parity ShiftRegister ResetShiftRegister EnableShiftRegister Stack Risc
examples := RiscSRAM PointerChaser
mini := Tile
designs := $(tutorial) $(examples) $(mini)
zynq_verilog := $(addprefix $(gen_dir)/, $(addsuffix /ZynqShim.v, $(designs)))
replay_verilog := $(addprefix $(gen_dir)/, $(addsuffix .v, $(designs)))

testbench_dir = $(base_dir)/src/main/cc
simif_dir = $(base_dir)/strober/src/main/cc
simif_h = $(wildcard $(simif_dir)/*.h) $(wildcard $(simif_dir)/utils/*.cc)
simif_cc = $(wildcard $(simif_dir)/*.cc) $(wildcard $(simif_dir)/utils/*.cc)

# Scala source files
src_path = src/main/scala
modules = . strober riscv-mini tutorial $(addprefix riscv-mini/, cde junctions)
scala_srcs = $(foreach module, $(modules), $(shell find $(base_dir)/$(module)/$(src_path) -name "*.scala"))

SBT ?= sbt
SBT_FLAGS ?=

$(zynq_verilog): $(gen_dir)/%/ZynqShim.v: $(scala_srcs)
	cd $(base_dir) && $(SBT) $(SBT_FLAGS) "run strober $* $(dir $@)"

$(replay_verilog): $(gen_dir)/%.v: $(scala_srcs)
	cd $(base_dir) && $(SBT) $(SBT_FLAGS) "run replay $* $(dir $@)"

$(out_dir)/dramsim2_ini:
	$(MAKE) -C $(simif_dir) OUT_DIR=$(out_dir) $@

$(out_dir)/%.chain:
	$(MAKE) -C $(simif_dir) DESIGN=$* GEN_DIR=$(gen_dir)/$* OUT_DIR=$(out_dir) $@
